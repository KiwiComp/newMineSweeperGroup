Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"bd85dbeb-5c28-491d-8cf1-e5506ae3c92d\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/GameManager.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GameManager.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Player.java\" afterDir=\"false\" />\r\n    </list>\r\n    <list id=\"5d81cdfb-da56-4ad9-bc3e-c3463226198b\" name=\"Changes by dlovan\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;KiwiComp&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\"><![CDATA[{\r\n  \"selectedUrlAndAccountId\": {\r\n    \"url\": \"https://github.com/KiwiComp/newMineSweeperGroup.git\",\r\n    \"accountId\": \"68f52cc4-9132-49bb-989e-1e7318f10cdb\"\r\n  }\r\n}]]></component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2npWWRRyOfIBRqdwuIJM5bkjNf0\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"/Users/dlovan/Desktop/skola/java/newMineSweeperGroup\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"preferences.lookFeel\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"bd85dbeb-5c28-491d-8cf1-e5506ae3c92d\" name=\"Changes\" comment=\"\" />\r\n      <created>1729670530223</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1729670530223</updated>\r\n      <workItem from=\"1729673079669\" duration=\"175000\" />\r\n      <workItem from=\"1729760460504\" duration=\"1077000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision ec5baecb2f76a31d4ce220f4f25da98b29310273)
+++ b/.idea/workspace.xml	(date 1729773417924)
@@ -4,11 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="bd85dbeb-5c28-491d-8cf1-e5506ae3c92d" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/GameManager.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GameManager.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Player.java" afterDir="false" />
+    <list default="true" id="bd85dbeb-5c28-491d-8cf1-e5506ae3c92d" name="Changes" comment="made some small changes for the code to work in specified way">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Board.java" afterDir="false" />
     </list>
     <list id="5d81cdfb-da56-4ad9-bc3e-c3463226198b" name="Changes by dlovan" comment="" />
     <option name="SHOW_DIALOG" value="false" />
@@ -55,7 +53,7 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master",
+    "git-widget-placeholder": "Isaac-GameManager-placeBombAdjecentHints",
     "kotlin-language-version-configured": "true",
     "last_opened_file_path": "/Users/dlovan/Desktop/skola/java/newMineSweeperGroup",
     "node.js.selected.package.tslint": "(autodetect)",
@@ -80,9 +78,22 @@
       <workItem from="1729673079669" duration="175000" />
       <workItem from="1729760460504" duration="1077000" />
     </task>
+    <task id="LOCAL-00001" summary="made some small changes for the code to work in specified way">
+      <option name="closed" value="true" />
+      <created>1729772050011</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1729772050011</updated>
+    </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="made some small changes for the code to work in specified way" />
+    <option name="LAST_COMMIT_MESSAGE" value="made some small changes for the code to work in specified way" />
+  </component>
 </project>
\ No newline at end of file
Index: src/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class Board {\r\n\r\n    private int columnCollection;\r\n    private int rowCollection;\r\n    private char[][] boardCollection = new char[rowCollection][columnCollection];\r\n    private char[][] bombCollection = new char[rowCollection][columnCollection];\r\n    Scanner scanner = new Scanner(System.in);\r\n    Player player = new Player();\r\n    private boolean gameEnd = false;\r\n    private boolean weHaveAWinner = false;\r\n    private int difficultyLevel;\r\n    private boolean closeApplication = false;\r\n\r\n\r\n\r\n    public Board() {\r\n\r\n    }\r\n\r\n\r\n    public boolean getGameEnd() {\r\n        return gameEnd;\r\n    }\r\n\r\n    public boolean getWeHaveAWinner() {\r\n        return weHaveAWinner;\r\n    }\r\n\r\n    public void setGameEnd(boolean gameEnd) {\r\n        this.gameEnd = gameEnd;\r\n    }\r\n\r\n    public void setWeHaveAWinner(boolean weHaveAWinner) {\r\n        this.weHaveAWinner = weHaveAWinner;\r\n    }\r\n\r\n\r\n    public void fillBoard() {\r\n        System.out.println(\"How many rows do you want for your board?\");\r\n        rowCollection = scanner.nextInt();\r\n        scanner.nextLine();\r\n        System.out.println(\"How many columns do you want for your board?\");\r\n        columnCollection = scanner.nextInt();\r\n        scanner.nextLine();\r\n        boardCollection = new char[rowCollection][columnCollection];\r\n        for (int row = 0; row < rowCollection; row++) {\r\n            for (int column = 0; column < columnCollection; column++) {\r\n                boardCollection[row][column] = '?';\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Board.java b/src/Board.java
--- a/src/Board.java	(revision ec5baecb2f76a31d4ce220f4f25da98b29310273)
+++ b/src/Board.java	(date 1729773730568)
@@ -48,9 +48,40 @@
         boardCollection = new char[rowCollection][columnCollection];
         for (int row = 0; row < rowCollection; row++) {
             for (int column = 0; column < columnCollection; column++) {
-                boardCollection[row][column] = '?';
+                boardCollection[row][column] = ' ';
             }
         }
     }
 
+    public int placeBombAdjacentHints(int userInput1, int userInput2) {
+        int bombAmount = 0;
+        for (int i = -1; i < 1; i++) {
+            if (userInput1 - 1 < 0 && userInput2 + i < 0 ) {
+                /*
+                if(checkBomb(userInput1, userInput2)){
+                    bombAmount++;
+                }
+                 */
+            }
+        }
+        for (int i = -1; i < 1; i++) {
+            if (userInput1 < 0 && userInput2 + i < 0 ) {
+                /*
+                if(checkBomb(userInput1, userInput2)){
+                    bombAmount++;
+                }
+                 */
+            }
+        }
+        for (int i = -1; i < 1; i++) {
+            if (userInput1 + 1 < 0 && userInput2 + i < 0 ) {
+                /*
+                if(checkBomb(userInput1, userInput2)){
+                    bombAmount++;
+                }
+                 */
+            }
+        }
+        return bombAmount;
+    }
 }
